# Face Recognition Code

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Face Recognition</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/opencv/4.5.3/opencv.js" async></script>
</head>
<body>
    <h1>Face Recognition Application</h1>
    <video id="video" width="640" height="480" autoplay></video>
    <button id="startButton">Start Recognition</button>
    <script>
        const video = document.getElementById('video');
        const startButton = document.getElementById('startButton');

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            });

        startButton.addEventListener('click', () => {
            // Load the Haar Cascade for face detection
            const classifier = new cv.CascadeClassifier();
            classifier.load('haarcascade_frontalface_default.xml');

            const src = new cv.Mat(video.height, video.width, cv.CV_8UC4);
            const gray = new cv.Mat();
            const faces = new cv.RectVector();

            const processVideo = () => {
                cv.imshow('canvasOutput', src);
                cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);
                classifier.detectMultiScale(gray, faces, 1.1, 3, 0);
                for (let i = 0; i < faces.size(); i++) {
                    const point1 = new cv.Point(faces.get(i).x, faces.get(i).y);
                    const point2 = new cv.Point(faces.get(i).x + faces.get(i).width, faces.get(i).y + faces.get(i).height);
                    cv.rectangle(src, point1, point2, [255, 0, 0, 255]);
                }
                requestAnimationFrame(processVideo);
            };

            const capture = () => {
                const context = canvas.getContext('2d');
                context.drawImage(video, 0, 0, video.width, video.height);
                src.data.set(context.getImageData(0, 0, video.width, video.height).data);
            };

            requestAnimationFrame(processVideo);
        });
    </script>
    <canvas id="canvasOutput" width="640" height="480" style="display:none;"></canvas>
</body>
</html>
